options {
  LOOKAHEAD=1;
}
PARSER_BEGIN(NewJava)
public class NewJava
{
  public static void main(String args[]) throws ParseException {
    NewJava myJava = new NewJava(System.in);
    SimpleNode root = myJava.Expression();
    root.dump("");

    System.out.println("F*CK JAS");
  }
}

PARSER_END(NewJava)
SKIP :
{
  " " | "\r" | "\t"
}
TOKEN:
{
  < CLASS: "class" >
  | < EXTENDS: "extends" >
  | < LF: "\n" >
  | < IDENTIFIER: ["A"-"Z","a"-"z"](["0"-"9","A"-"Z","a"-"z","_"])* >
}
SimpleNode Expression(): {}
{
  <CLASS> <IDENTIFIER> (<EXTENDS> <IDENTIFIER>)? "{""}" <LF> {return jjtThis;}
}
