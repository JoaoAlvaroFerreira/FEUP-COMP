/* Generated By:JJTree&JavaCC: Do not edit this line. NewJavaConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface NewJavaConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 9;
  /** RegularExpression Id. */
  int FORMAL_COMMENT = 10;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 11;
  /** RegularExpression Id. */
  int CLASS = 13;
  /** RegularExpression Id. */
  int EXTENDS = 14;
  /** RegularExpression Id. */
  int AND = 15;
  /** RegularExpression Id. */
  int MINOR = 16;
  /** RegularExpression Id. */
  int OPERATORSLOW = 17;
  /** RegularExpression Id. */
  int OPERATORSHIGH = 18;
  /** RegularExpression Id. */
  int BRACKETOPEN = 19;
  /** RegularExpression Id. */
  int BRACKETCLOSE = 20;
  /** RegularExpression Id. */
  int FULLSTOP = 21;
  /** RegularExpression Id. */
  int COMMA = 22;
  /** RegularExpression Id. */
  int SEMICOLON = 23;
  /** RegularExpression Id. */
  int NOT = 24;
  /** RegularExpression Id. */
  int ROUNDBRACKETOPEN = 25;
  /** RegularExpression Id. */
  int ROUNDBRACKETCLOSED = 26;
  /** RegularExpression Id. */
  int CURLYBRACKETOPENED = 27;
  /** RegularExpression Id. */
  int CURLYBRACKETCLOSED = 28;
  /** RegularExpression Id. */
  int ASSIGN = 29;
  /** RegularExpression Id. */
  int TRUE = 30;
  /** RegularExpression Id. */
  int FALSE = 31;
  /** RegularExpression Id. */
  int THIS = 32;
  /** RegularExpression Id. */
  int NEW = 33;
  /** RegularExpression Id. */
  int LENGTH = 34;
  /** RegularExpression Id. */
  int INT = 35;
  /** RegularExpression Id. */
  int PUBLIC = 36;
  /** RegularExpression Id. */
  int STATIC = 37;
  /** RegularExpression Id. */
  int VOID = 38;
  /** RegularExpression Id. */
  int MAIN = 39;
  /** RegularExpression Id. */
  int RETURN = 40;
  /** RegularExpression Id. */
  int BOOLEAN = 41;
  /** RegularExpression Id. */
  int IF = 42;
  /** RegularExpression Id. */
  int ELSE = 43;
  /** RegularExpression Id. */
  int WHILE = 44;
  /** RegularExpression Id. */
  int STRING = 45;
  /** RegularExpression Id. */
  int INTEGERLITERAL = 46;
  /** RegularExpression Id. */
  int IDENTIFIER = 47;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_SINGLE_LINE_COMMENT = 1;
  /** Lexical state. */
  int IN_FORMAL_COMMENT = 2;
  /** Lexical state. */
  int IN_MULTI_LINE_COMMENT = 3;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\n \"",
    "\"//\"",
    "<token of kind 7>",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "\"*/\"",
    "<token of kind 12>",
    "\"class\"",
    "\"extends\"",
    "\"&&\"",
    "\"<\"",
    "<OPERATORSLOW>",
    "<OPERATORSHIGH>",
    "\"[\"",
    "\"]\"",
    "\".\"",
    "\",\"",
    "\";\"",
    "\"!\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"=\"",
    "\"true\"",
    "\"false\"",
    "\"this\"",
    "\"new\"",
    "\"length\"",
    "\"int\"",
    "\"public\"",
    "\"static\"",
    "\"void\"",
    "\"main\"",
    "\"return\"",
    "\"boolean\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"String\"",
    "<INTEGERLITERAL>",
    "<IDENTIFIER>",
  };

}
