/*@bgen(jjtree) Generated By:JJTree: Do not edit this line. NewJava.jj */
/*@egen*/options {
  LOOKAHEAD=1;
}
PARSER_BEGIN(NewJava)
public class NewJava/*@bgen(jjtree)*/implements NewJavaTreeConstants/*@egen*/
{/*@bgen(jjtree)*/
  protected static JJTNewJavaState jjtree = new JJTNewJavaState();

/*@egen*/
  public static void main(String args[]) throws ParseException {
    NewJava myJava = new NewJava(System.in);
    SimpleNode root = myJava.Expression();
    root.dump("");

    System.out.println("F*CK JAS");
  }
}

PARSER_END(NewJava)
SKIP :
{
  " " | "\r" | "\t"
}
TOKEN:
{
  < CLASS: "class" >
  | < LF: "\n" >
  | < SYMBOL: ["A"-"Z","a"-"z"](["0"-"9","A"-"Z","a"-"z"])* >
}
SimpleNode Expression(): {/*@bgen(jjtree) Expression */
  SimpleNode jjtn000 = new SimpleNode(JJTEXPRESSION);
  boolean jjtc000 = true;
  jjtree.openNodeScope(jjtn000);
/*@egen*/}
{/*@bgen(jjtree) Expression */
  try {
/*@egen*/
  <CLASS> <SYMBOL> "{""}" <LF>/*@bgen(jjtree)*/
                               {
                                 jjtree.closeNodeScope(jjtn000, true);
                                 jjtc000 = false;
                               }
/*@egen*/ {return jjtn000;}/*@bgen(jjtree)*/
  } finally {
    if (jjtc000) {
      jjtree.closeNodeScope(jjtn000, true);
    }
  }
/*@egen*/
}